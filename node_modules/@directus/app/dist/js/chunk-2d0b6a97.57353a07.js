(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b6a97"],{"1db0":function(e,n,t){"use strict";t.r(n),n["default"]='\n\n# Collections\n\n> You can manage your collections within the Data Model section of the App\'s Settings, via the\n> [API Collections Endpoint](/reference/api/collections), or directly within the database. If you\'re unfamiliar with Directus\n> Collections, please start by reading our [Understanding Collections](/concepts/platform-overview#collections) docs.\n\n## Creating a Collection\n\n1. Navigate to **Settings > Data Model**\n2. Click the **Create Collection** action button in the header\n3. Enter a unique **Collection Name**, keeping in mind that this is entered as a _key_ that\n   determines the database table name, and is then presented in the App using the\n   [Title Formatter](/reference/internal-helpers#title-formatter).\n4. Optional: Configure the collection\'s **Primary Key** name and type.\n    - Auto-Incremented Integer\n    - Generated UUID\n    - Manually Entered String\n5. Optional: Enable and rename any desired **System Fields**.\n    - Status\n    - Sort\n    - Created On\n    - Created By\n    - Updated On\n    - Updated By\n6. Click the **Finish Setup** button\n\n\x3c!-- prettier-ignore-start --\x3e\n::: danger Immutable Keys\nThe collection name, primary key name/type, and system field names can not\nbe modified after the collection is created.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n\n\x3c!-- prettier-ignore-start --\x3e\n::: tip Database Tables\nKeep in mind that a Directus Collection is just a database table. Therefore you\ncan import or create a table directly in the database, and it will automatically appear within\nDirectus. The first time you manage that table, a `directus_collections` record will be created with\ndefault values.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n\n## Configuring a Collection\n\n### Fields & Layout\n\n-   [Creating a Field](/guides/fields#creating-a-field)\n-   [Updating a Field](/guides/fields#updating-a-field)\n-   [Deleting a Field](/guides/fields#deleting-a-field)\n-   [Duplicating a Field](/guides/fields#duplicating-a-field)\n-   [Changing Field Order & Layout](/guides/fields#adjusting-field-layout)\n\n### Collection Setup\n\n-   **Collection Name** — This is the key for the collection. It can not be modified, but you can\n    override it with Translations (see below)\n-   **Icon** — The icon used throughout the App when referencing this collection\n-   **Note** — A helpful note that explains the collection\'s purpose\n-   **Display Template** — A [Field Template](#) used to create dynamic titles for the collection\'s\n    items\n-   **Hidden** — Toggles if the collection should be globally hidden. Keep in mind that Admin roles\n    can always see all collections.\n-   **Singleton** — Is this collection will only contain a single item (eg: an "About Us" form).\n    When enabled, the [Collection Detail](/concepts/app-overview#collection-detail) will be bypassed, and users are taken directly to the\n    [Item Detail](/concepts/app-overview#item-detail) page.\n-   **Translation** — Allows translating the collection name into different languages. These\n    [Schema Translations](/concepts/internationalization#schema-translations) are important for multilingual projects. You can also "translate" a\n    collection name into the default language — helpful for renaming technical table names.\n\n### Archive\n\nThe archive feature allows you to enable the collection with a custom soft-delete option.\nSoft-delete allows users to remove items from the App, but maintains the actual database record for\neasy recovery.\n\n-   **Archive Field** — The field that holds the archive value\n-   **Archive App Filter** — Allows users to view archived items\n-   **Archive Value** — The value saved in the Archive Field when archived\n-   **Unarchive Value** — The value saved in the Archive Field when unarchived\n\n\x3c!-- prettier-ignore-start --\x3e\n::: warning API Responses\nItems that have been archived are still returned normally via the API. It\nis up to you to filter them out as needed.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n\n\x3c!-- prettier-ignore-start --\x3e\n::: tip Status Field\nWhen creating a new Collection, you have the option of creating an optional\n"Status" field. If you choose to include this field, the collection\'s archive settings will\nautomatically be configured for you.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n\n### Sort\n\nThe sort feature enables manual drag-and-drop item reordering within the Directus App. This is\ntypically shown on the [Collection Detail](/concepts/app-overview#collection-detail) page/modal, and can also be used for sorting items\nwithin a [Junction Table](#).\n\n\x3c!-- prettier-ignore-start --\x3e\n::: tip Sort Field\nWhen creating a new Collection, you have the option of creating an optional "Sort"\nfield. If you choose to include this field, the collection\'s sort settings will automatically be\nconfigured for you.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n\n## Deleting a Collection\n\n1. Navigate to **Settings > Data Model > [Collection Name]**\n2. Click the red **Delete Collection** action button in the header\n3. Confirm this decision by clicking **Delete** in the dialog\n\n\x3c!-- prettier-ignore-start --\x3e\n::: danger Irreversible Change\nThis action is permanent and can not be undone. Please proceed with\ncaution.\n:::\n\x3c!-- prettier-ignore-end --\x3e'}}]);