(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a3317"],{"00ab":function(e,t,n){"use strict";n.r(t),t["default"]="# Webhooks\n\n> In addition to writing custom code for more complex [event hooks](/concepts/api-extensions),\n> Directus provides a way to quickly configure webhooks through the App. These send HTTP requests\n> when a specific event is triggered within the project.\n\n## Creating Webhooks\n\n1. Navigate to **Settings > Webhooks**\n2. Click the **Create Webhook** action button in the header\n3. Complete the **other webhook form fields** outlined below\n\n-   **Name** — A name to help remember this webhooks purpose\n-   **Method** — Send as either a HTTP `GET` or `POST` request\n-   **URL** — The URL to send the request to\n-   **Status** — Whether the webhook is active (enabled) or inactive (disabled)\n-   **Data** — Whether the event's data should be sent along with the request\n-   **Trigger Actions** — The specific actions that will trigger the event\n-   **Trigger Collections** — The specific collections for which the above actions will trigger the\n    event\n\n## Disabling Webhooks\n\n1. Navigate to **Settings > Webhooks > [Webhook]**\n2. Set the **status field to inactive**\n\n## Deleting Webhooks\n\n1. Navigate to **Settings > Webhooks > [Webhook]**\n2. Click the red **Delete Webhook** action button in the header\n3. Confirm this decision by clicking **Delete** in the dialog\n\n\x3c!-- prettier-ignore-start --\x3e\n::: danger Irreversible Change\nThis action is permanent and can not be undone. Please proceed with caution.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n"}}]);