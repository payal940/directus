(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0f03c4"],{"9c04":function(n,e,t){"use strict";t.r(e),e["default"]="# Create a Custom Module\n\n> Custom modules allow you to create completely new experiences within the platform.\n\n## 1. Setup the Boilerplate\n\nEvery module is a standalone \"package\" that contains at least a metadata file and a Vue component.\nWe recommend using the following file structure:\n\n```\nsrc/\n\tindex.js\n\tmodule.vue\n```\n\n### src/index.js\n\n```js\nimport ModuleComponent from './module.vue';\n\nexport default {\n\tid: 'custom',\n\tname: 'Custom',\n\ticon: 'box',\n\troutes: [\n\t\t{\n\t\t\tpath: '/',\n\t\t\tcomponent: ModuleComponent,\n\t\t},\n\t],\n};\n```\n\n-   `id` — The unique key for this module. It is good practice to scope proprietary interfaces with\n    an author prefix.\n-   `name` — The human-readable name for this module.\n-   `icon` — An icon name from the material icon set, or the extended list of Directus custom icons.\n-   `routes` — Details the routes in your module per the Vue router.\n\n\x3c!-- prettier-ignore-start --\x3e\n::: tip\nSee [the TypeScript definition](https://github.com/directus/directus/blob/20355fee5eba514dd75565f60269311187010c66/app/src/modules/types.ts#L6-L17)\nfor more info on what can go into this object.\n:::\n\x3c!-- prettier-ignore-end --\x3e\n\n### src/module.vue\n\n```vue\n<template>\n\n  <private-view title=\"My Custom Module\">\n\n    Content goes here...\n\n  </private-view>\n\n</template>\n\n<script>\n\texport default {};\n<\/script>\n```\n\n#### Available Props\n\nIf you setup a route with a parameter, you can pass it in as a prop.\n\n## 2. Install Dependencies and Configure the Buildchain\n\nSet up a package.json file by running:\n\n```bash\nnpm init -y\n```\n\nTo be read by the Admin App, your custom module's Vue component must first be bundled into a single\n`index.js` file. We recommend bundling your code using Rollup. To install this and the other\ndevelopment dependencies, run this command:\n\n```bash\nnpm i -D rollup rollup-plugin-commonjs rollup-plugin-node-resolve rollup-plugin-terser rollup-plugin-vue@5.0.0 @vue/compiler-sfc vue-template-compiler\n```\n\nYou can then use the following Rollup configuration within `rollup.config.js`:\n\n```js\nimport { terser } from 'rollup-plugin-terser';\nimport resolve from 'rollup-plugin-node-resolve';\nimport commonjs from 'rollup-plugin-commonjs';\nimport vue from 'rollup-plugin-vue';\n\nexport default {\n\tinput: 'src/index.js',\n\toutput: {\n\t\tformat: 'es',\n\t\tfile: 'dist/index.js',\n\t},\n\tplugins: [terser(), resolve(), commonjs(), vue()],\n};\n```\n\n## 3. Develop Your Custom Module\n\nThe module itself is simply a Vue component, which provides an blank canvas for creating anything\nyou need.\n\n## 4. Build and Deploy\n\nTo build the module for use within Directus, run:\n\n```bash\nnpx rollup -c\n```\n\nFinally, move the output from your module's `dist` folder into your project's `/extensions/modules`\nfolder. Keep in mind that the extensions directory is configurable within your env file, and may be\nlocated elsewhere.\n"}}]);