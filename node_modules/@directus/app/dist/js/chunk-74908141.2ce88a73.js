(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-74908141"],{"612cc":function(e,t,n){"use strict";n.r(t),t["default"]="# App Extensions\n\n> Directus has been architected as completely modular and extensible. There are four keystone component types within the\n> App. Out-of-the-box components are configurable, or altogether new components can be created as extensions.\n\n## Modules\n\nModules are the highest and broadest level of organization within the App. All core functionality within the App (other\nthan authentication and activity) can be bucketed into one of the following five modules:\n\n- Collections — The primary way to view and interact with database content\n- User Directory — A dedicated section for the platform's system Users\n- File Library — An aggregate of all files uploaded and managed within the platform\n- Documentation — A tailored, in-app portal for the platform's concepts, guides, and reference\n- Settings — An Admin-Only section for configuring the project and system settings\n\nIn addition to these core modules, custom modules offer a _blank canvas_ for creating altogether new/different\nexperiences within the App, such as proprietary dashboards, compound datasets, or third-party integrations (eg: a Stripe\nPayments Console).\n\n### Relevant Guides\n\n- [Creating a Custom Module](/guides/extensions/modules)\n\n## Layouts\n\nLayouts provide different ways for presenting, browsing, visualizing, or even managing sets of data. Most commonly shown\non Collection Detail pages and contextual modals for item selection. Directus includes several Layout options\nout-of-the-box, each with different features and configuration options.\n\n### Table\n\nThis tabular layout supports all forms of data, and is therefore the default within the Collections module. It includes\nthe following features/options:\n\n- Toggle & Reorder Field Columns (Option)\n- Row Spacing (Option)\n- Manual Ordering\n- Column Sort\n- Column Resizing\n- Select All\n\n### Cards\n\nThis tiled layout is ideal for collections that prioritize an image. It is the default for both the\n[User Directory](/guides/users) (shows the avatar) and [File Library](/guides/files) (shows asset thumbnail). It\nincludes the following features/options:\n\n- Image Source (Option)\n- Title (Option)\n- Subtitle (Option)\n- Image Fit (Option)\n- Fallback Icon (Option)\n- Card Size\n- Sort Field & Direction\n- Select All\n\n\x3c!-- ### Calendar\n\nThis temporal layout is ideal for collections that prioritize a date and/or time. It is the default for the [Activity Page](/concepts/activity-and-versions). It includes the following features/options:\n\n* @TODO\n\nIn addition to these core layouts, custom layouts allow for creating more tailored or proprietary ways to experience data within the App, such as charts, seating charts, or Maps. --\x3e\n\n### Relevant Guides\n\n- [Creating a Custom Layout](/guides/extensions/layouts)\n\n## Interfaces\n\nInterfaces provide a multitude of ways to view or interact with field data on\n[Item Detail](/concepts/app-overview#item-detail) page forms. Every interface supports a specific subset of field\n[types](/reference/field-types) (eg: String), which determines how the data will be stored. For example, the _Text\nInput_ interface can manage most types of data, but might not be ideal for dates, where a _Calendar_ interface excels.\nDirectus includes many Interfaces out-of-the-box:\n\n- Text Input\n- @TODO List all core interfaces, or link to an exhaustive reference?\n\nIn addition to these core interfaces, custom interfaces allow for creating more tailored or proprietary ways to view or\nmanage field data, such as bespoke layout builders, skeuomorphic knobs, or relational views for third-party data (eg:\nStripe Credit Card UI).\n\n### Relevant Guides\n\n- [Creating a Custom Interface](/guides/extensions/interfaces)\n\n## Displays\n\nDisplays are the smaller, read-only counterpart to Interfaces, defining how a field's data will be displayed inline on\n[Item Detail](/concepts/app-overview#item-detail) pages, Modals, and even within Interfaces themselves. For example, you\nmay have a \"Status\" field that uses a _Dropdown_ Interface on the Item Detail page, and a _Color Dot_ Display when the\nfield is referenced throughout the rest of the App. Directus includes many Displays out-of-the-box:\n\n- Raw\n- Formatted Value\n- @TODO List all core interfaces, or link to an exhaustive reference?\n\nIn addition to these core displays, custom displays allow for creating customized ways to view or represent field data,\nsuch as progress indicators, relational data tooltips, or specific formatting options.\n\n### Relevant Guides\n\n- [Creating a Custom Display](/guides/extensions/displays)\n"}}]);